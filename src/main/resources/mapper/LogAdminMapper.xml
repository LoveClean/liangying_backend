<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.framework.dao.mapper.LogAdminMapper">
  <resultMap id="BaseResultMap" type="com.springboot.framework.dao.entity.LogAdmin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="remote_address" jdbcType="VARCHAR" property="remoteAddress" />
    <result column="request_uri" jdbcType="VARCHAR" property="requestUri" />
    <result column="method" jdbcType="VARCHAR" property="method" />
    <result column="request_params" jdbcType="VARCHAR" property="requestParams" />
    <result column="response" jdbcType="VARCHAR" property="response" />
    <result column="exception" jdbcType="VARCHAR" property="exception" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
  </resultMap>
  <sql id="Base_Column_List">
    id, type, title, remote_address, request_uri, method, request_params, response, exception, 
    create_by, create_date
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from log_admin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log_admin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.springboot.framework.dao.entity.LogAdmin">
    insert into log_admin (id, type, title, 
      remote_address, request_uri, method, 
      request_params, response, exception, 
      create_by, create_date)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, 
      #{remoteAddress,jdbcType=VARCHAR}, #{requestUri,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, 
      #{requestParams,jdbcType=VARCHAR}, #{response,jdbcType=VARCHAR}, #{exception,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.framework.dao.entity.LogAdmin">
    insert into log_admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="remoteAddress != null">
        remote_address,
      </if>
      <if test="requestUri != null">
        request_uri,
      </if>
      <if test="method != null">
        method,
      </if>
      <if test="requestParams != null">
        request_params,
      </if>
      <if test="response != null">
        response,
      </if>
      <if test="exception != null">
        exception,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="remoteAddress != null">
        #{remoteAddress,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null">
        #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="response != null">
        #{response,jdbcType=VARCHAR},
      </if>
      <if test="exception != null">
        #{exception,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.framework.dao.entity.LogAdmin">
    update log_admin
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="remoteAddress != null">
        remote_address = #{remoteAddress,jdbcType=VARCHAR},
      </if>
      <if test="requestUri != null">
        request_uri = #{requestUri,jdbcType=VARCHAR},
      </if>
      <if test="method != null">
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="requestParams != null">
        request_params = #{requestParams,jdbcType=VARCHAR},
      </if>
      <if test="response != null">
        response = #{response,jdbcType=VARCHAR},
      </if>
      <if test="exception != null">
        exception = #{exception,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.framework.dao.entity.LogAdmin">
    update log_admin
    set type = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      remote_address = #{remoteAddress,jdbcType=VARCHAR},
      request_uri = #{requestUri,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      request_params = #{requestParams,jdbcType=VARCHAR},
      response = #{response,jdbcType=VARCHAR},
      exception = #{exception,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
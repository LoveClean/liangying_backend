<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.framework.dao.mapper.UserInfoMapper">
  <resultMap id="BaseResultMap" type="com.springboot.framework.dao.entity.UserInfo">
    <id column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="profession" jdbcType="TINYINT" property="profession" />
    <result column="accumulation_fund" jdbcType="TINYINT" property="accumulationFund" />
    <result column="social_security" jdbcType="TINYINT" property="socialSecurity" />
    <result column="commercial_insurance" jdbcType="TINYINT" property="commercialInsurance" />
    <result column="credit" jdbcType="VARCHAR" property="credit" />
    <result column="id_front" jdbcType="VARCHAR" property="idFront" />
    <result column="id_back" jdbcType="VARCHAR" property="idBack" />
    <result column="bind" jdbcType="VARCHAR" property="bind" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.springboot.framework.dao.entity.UserInfo">
    <result column="loan_officer_file" jdbcType="LONGVARCHAR" property="loanOfficerFile" />
  </resultMap>
  <sql id="Base_Column_List">
    user_id, profession, accumulation_fund, social_security, commercial_insurance, credit, 
    id_front, id_back, bind
  </sql>
  <sql id="Blob_Column_List">
    loan_officer_file
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_user_info
    where user_id = #{userId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.springboot.framework.dao.entity.UserInfo">
    insert into tb_user_info (user_id, profession, accumulation_fund, 
      social_security, commercial_insurance, credit, 
      id_front, id_back, bind, 
      loan_officer_file)
    values (#{userId,jdbcType=VARCHAR}, #{profession,jdbcType=TINYINT}, #{accumulationFund,jdbcType=TINYINT}, 
      #{socialSecurity,jdbcType=TINYINT}, #{commercialInsurance,jdbcType=TINYINT}, #{credit,jdbcType=VARCHAR}, 
      #{idFront,jdbcType=VARCHAR}, #{idBack,jdbcType=VARCHAR}, #{bind,jdbcType=VARCHAR}, 
      #{loanOfficerFile,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.framework.dao.entity.UserInfo">
    insert into tb_user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="profession != null">
        profession,
      </if>
      <if test="accumulationFund != null">
        accumulation_fund,
      </if>
      <if test="socialSecurity != null">
        social_security,
      </if>
      <if test="commercialInsurance != null">
        commercial_insurance,
      </if>
      <if test="credit != null">
        credit,
      </if>
      <if test="idFront != null">
        id_front,
      </if>
      <if test="idBack != null">
        id_back,
      </if>
      <if test="bind != null">
        bind,
      </if>
      <if test="loanOfficerFile != null">
        loan_officer_file,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="profession != null">
        #{profession,jdbcType=TINYINT},
      </if>
      <if test="accumulationFund != null">
        #{accumulationFund,jdbcType=TINYINT},
      </if>
      <if test="socialSecurity != null">
        #{socialSecurity,jdbcType=TINYINT},
      </if>
      <if test="commercialInsurance != null">
        #{commercialInsurance,jdbcType=TINYINT},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=VARCHAR},
      </if>
      <if test="idFront != null">
        #{idFront,jdbcType=VARCHAR},
      </if>
      <if test="idBack != null">
        #{idBack,jdbcType=VARCHAR},
      </if>
      <if test="bind != null">
        #{bind,jdbcType=VARCHAR},
      </if>
      <if test="loanOfficerFile != null">
        #{loanOfficerFile,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.framework.dao.entity.UserInfo">
    update tb_user_info
    <set>
      <if test="profession != null">
        profession = #{profession,jdbcType=TINYINT},
      </if>
      <if test="accumulationFund != null">
        accumulation_fund = #{accumulationFund,jdbcType=TINYINT},
      </if>
      <if test="socialSecurity != null">
        social_security = #{socialSecurity,jdbcType=TINYINT},
      </if>
      <if test="commercialInsurance != null">
        commercial_insurance = #{commercialInsurance,jdbcType=TINYINT},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=VARCHAR},
      </if>
      <if test="idFront != null">
        id_front = #{idFront,jdbcType=VARCHAR},
      </if>
      <if test="idBack != null">
        id_back = #{idBack,jdbcType=VARCHAR},
      </if>
      <if test="bind != null">
        bind = #{bind,jdbcType=VARCHAR},
      </if>
      <if test="loanOfficerFile != null">
        loan_officer_file = #{loanOfficerFile,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.springboot.framework.dao.entity.UserInfo">
    update tb_user_info
    set profession = #{profession,jdbcType=TINYINT},
      accumulation_fund = #{accumulationFund,jdbcType=TINYINT},
      social_security = #{socialSecurity,jdbcType=TINYINT},
      commercial_insurance = #{commercialInsurance,jdbcType=TINYINT},
      credit = #{credit,jdbcType=VARCHAR},
      id_front = #{idFront,jdbcType=VARCHAR},
      id_back = #{idBack,jdbcType=VARCHAR},
      bind = #{bind,jdbcType=VARCHAR},
      loan_officer_file = #{loanOfficerFile,jdbcType=LONGVARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.framework.dao.entity.UserInfo">
    update tb_user_info
    set profession = #{profession,jdbcType=TINYINT},
      accumulation_fund = #{accumulationFund,jdbcType=TINYINT},
      social_security = #{socialSecurity,jdbcType=TINYINT},
      commercial_insurance = #{commercialInsurance,jdbcType=TINYINT},
      credit = #{credit,jdbcType=VARCHAR},
      id_front = #{idFront,jdbcType=VARCHAR},
      id_back = #{idBack,jdbcType=VARCHAR},
      bind = #{bind,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=VARCHAR}
  </update>
</mapper>
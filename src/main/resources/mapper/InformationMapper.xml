<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springboot.framework.dao.mapper.InformationMapper">
  <resultMap id="BaseResultMap" type="com.springboot.framework.dao.entity.Information">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="cover" jdbcType="VARCHAR" property="cover" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="introduction" jdbcType="VARCHAR" property="introduction" />
    <result column="read" jdbcType="INTEGER" property="read" />
    <result column="like" jdbcType="INTEGER" property="like" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, title, cover, category, introduction, `read`, `like`, create_by, create_date, update_by,
    update_date, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_information
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
    <!--delete from tb_information-->
    <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->
  <insert id="insert" parameterType="com.springboot.framework.dao.entity.Information">
    insert into tb_information (id, title, cover, 
      category, introduction, `read`,
      `like`, create_by, create_date,
      update_by, update_date, status
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, 
      #{category,jdbcType=VARCHAR}, #{introduction,jdbcType=VARCHAR}, #{read,jdbcType=INTEGER}, 
      #{like,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.springboot.framework.dao.entity.Information">
    insert into tb_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
      <if test="read != null">
        `read`,
      </if>
      <if test="like != null">
        `like`,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="read != null">
        #{read,jdbcType=INTEGER},
      </if>
      <if test="like != null">
        #{like,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.springboot.framework.dao.entity.Information">
    update tb_information
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=VARCHAR},
      </if>
      <if test="read != null">
        `read` = #{read,jdbcType=INTEGER},
      </if>
      <if test="like != null">
        `like` = #{like,jdbcType=INTEGER},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.springboot.framework.dao.entity.Information">
    update tb_information
    set title = #{title,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      introduction = #{introduction,jdbcType=VARCHAR},
      `read` = #{read,jdbcType=INTEGER},
      `like` = #{like,jdbcType=INTEGER},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>